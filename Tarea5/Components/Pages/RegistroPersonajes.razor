@page "/RegistroPersonajes"
@page "/RegistroPersonajes/{id:int}/editar"
@rendermode InteractiveServer
<PageTitle>Registro Personajes</PageTitle>
<EditForm Model="personaje" OnValidSubmit="guardarPersonaje">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    <div class="container mt-5">
        <h3 class="text-center mb-4 text-white">Registro de Personajes</h3>
        <div class="row g-4">
            <div class="col-md-6">
                <div class="form-floating">
                    <InputText id="Nombre" class="form-control" @bind-Value="personaje.Nombre" placeholder="Nombre del personaje" />
                    <label for="Nombre">Nombre</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-floating">
                    <InputText id="Alias" class="form-control" @bind-Value="personaje.Alias" placeholder="Alias" />
                    <label for="Alias">Alias</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-floating">
                    <InputText id="Rol" class="form-control" @bind-Value="personaje.Rol" placeholder="Rol" />
                    <label for="Rol">Rol</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-floating">
                    <InputText id="Habilidad" class="form-control" @bind-Value="personaje.Habilidad" placeholder="Habilidad" />
                    <label for="Habilidad">Habilidad</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-floating">
                    <InputText id="Arma" class="form-control" @bind-Value="personaje.Arma" placeholder="Arma de personaje" />
                    <label for="Arma">Arma de personaje</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-floating">
                    <InputNumber id="NivelPoder" @bind-Value="personaje.NivelPoder" class="form-control" placeholder="Nivel de poder" />
                    <label for="NivelPoder">Nivel de poder</label>
                </div>
            </div>

            <div class="col-12">
                <div class="form-floating">
                    <InputText type="ImagenPortada" id="ImagenPortada" @bind-Value="personaje.ImagenPortada" class="form-control" rows="4" placeholder="Imagen del personaje"></InputText>
                    <label for="ImagenPortada">Imagen del personaje ( URL )</label>
                </div>
            </div>
        </div>

       <div class="text-center mt-2">
            <button type="submit" class="btn btn-primary px-5 shadow mt-3" style="color: white; background-color: #e43535;">Guardar Personaje</button>
        </div>
    </div>


</EditForm>

@code
{
    [Parameter] public int? id {get;set;}
    Personajes personaje = new Personajes();
    List<Personajes> personajes = new List<Personajes>();

    protected override async Task OnInitializedAsync()
    {
        var personajes = await Bd.PersonajeContext.ToListAsync();
    }
    protected async Task guardarPersonaje()
    {
        if(personaje.Id >0 )
        {
            Bd.PersonajeContext.Update(personaje);
        }
        else
        {
            Bd.PersonajeContext.Add(personaje);
        }

            await Bd.SaveChangesAsync();
            await JSx.InvokeVoidAsync("alert", "Personaje guardado exitosamente");
            NavMan.NavigateTo("/Personajes");
        }
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                if (id > 0)
                {
                    personaje = await Bd.PersonajeContext.FirstOrDefaultAsync(x => x.Id == id) ?? new Personajes();
                    StateHasChanged();
                }
            }
        }
}

<style>
    body{
        background-color: #2c3e50;
    }
</style>